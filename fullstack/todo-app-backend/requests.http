### Register User
# Crea un nuevo usuario. ¡Usa un email diferente cada vez!
POST http://localhost:5000/api/auth/register
Content-Type: application/json

{
    "username": "otro_usuario_ejemplo_2",
    "email": "otro.email.ejemplo.2@example.com",
    "password": "otra_password_fuerte_2"
}



### Login User
# Inicia sesión para obtener un token JWT actualizado, si necesitas uno nuevo.
# El token actual ya está en las demás consultas de abajo.
POST http://localhost:5000/api/auth/login
Content-Type: application/json

{
    "email": "nuevo.email.prueba@example.com",
    "password": "password_segura"
}


### Create Task
# Crea una nueva tarea para el usuario autenticado.
# El backend asigna automáticamente el 'orderIndex'.
POST http://localhost:5000/api/tasks
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjYsInVzZXJuYW1lIjoibnVldm9fdXN1YXJpb19wcnVlYmEiLCJlbWFpbCI6Im51ZXZvLmVtYWlsLnBydWViYUBleGFtcGxlLmNvbSIsImlhdCI6MTc1MTY0OTY2OCwiZXhwIjoxNzUxNjUzMjY4fQ.ye6wtIf6moa40ZJsnIqbgGkdYalNVJxw75X0mT4RxK0

{
    "title": "Finalizar informe mensual",
    "description": "Recopilar datos y redactar conclusiones.",
    "status": "pending",
    "priority": "high",
    "dueDate": "2025-07-31T17:00:00Z"
}



### Get All Tasks
# Obtiene todas las tareas del usuario autenticado, ordenadas por 'orderIndex'.
# ¡CONFIRMA aquí los IDs y el 'orderIndex' para las siguientes consultas!
GET http://localhost:5000/api/tasks
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjYsInVzZXJuYW1lIjoibnVldm9fdXN1YXJpb19wcnVlYmEiLCJlbWFpbCI6Im51ZXZvLmVtYWlsLnBydWViYUBleGFtcGxlLmNvbSIsImlhdCI6MTc1MTY0OTY2OCwiZXhwIjoxNzUxNjUzMjY4fQ.ye6wtIf6moa40ZJsnIqbgGkdYalNVJxw75X0mT4RxK0



### Get Task by ID
# Obtiene una tarea específica por su ID.
# Usa un ID real de tu 'Get All Tasks' (por ejemplo, 10, 12, 13).
GET http://localhost:5000/api/tasks/14
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjYsInVzZXJuYW1lIjoibnVldm9fdXN1YXJpb19wcnVlYmEiLCJlbWFpbCI6Im51ZXZvLmVtYWlsLnBydWViYUBleGFtcGxlLmNvbSIsImlhdCI6MTc1MTY0OTY2OCwiZXhwIjoxNzUxNjUzMjY4fQ.ye6wtIf6moa40ZJsnIqbgGkdYalNVJxw75X0mT4RxK0



### Update Task
# Actualiza una tarea existente por su ID.
# Usa un ID real de tu 'Get All Tasks' (por ejemplo, 12).
PUT http://localhost:5000/api/tasks/14
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjYsInVzZXJuYW1lIjoibnVldm9fdXN1YXJpb19wcnVlYmEiLCJlbWFpbCI6Im51ZXZvLmVtYWlsLnBydWViYUBleGFtcGxlLmNvbSIsImlhdCI6MTc1MTY0OTY2OCwiZXhwIjoxNzUxNjUzMjY4fQ.ye6wtIf6moa40ZJsnIqbgGkdYalNVJxw75X0mT4RxK0

{
    "title": "Reunión de equipo (Actualizado)",
    "status": "completed",
    "priority": "low",
    "completedAt": "2025-07-04T14:30:00Z"
}



### Delete Task
# Elimina una tarea por su ID.
# Usa un ID real de tu 'Get All Tasks' que quieras borrar (por ejemplo, 13).
DELETE http://localhost:5000/api/tasks/13
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjYsInVzZXJuYW1lIjoibnVldm9fdXN1YXJpb19wcnVlYmEiLCJlbWFpbCI6Im51ZXZvLmVtYWlsLnBydWViYUBleGFtcGxlLmNvbSIsImlhdCI6MTc1MTY0OTY2OCwiZXhwIjoxNzUxNjUzMjY4fQ.ye6wtIf6moa40ZJsnIqbgGkdYalNVJxw75X0mT4RxK0



### Reorder Tasks
# Reordena múltiples tareas para el usuario autenticado.
# ¡IMPORTANTE! Confirma los IDs de tus tareas con 'Get All Tasks' y ajústalos aquí.
# Si eliminaste la tarea 13, no la incluyas en este array.
PUT http://localhost:5000/api/tasks/reorder
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjYsInVzZXJuYW1lIjoibnVldm9fdXN1YXJpb19wcnVlYmEiLCJlbWFpbCI6Im51ZXZvLmVtYWlsLnBydWViYUBleGFtcGxlLmNvbSIsImlhdCI6MTc1MTY0OTY2OCwiZXhwIjoxNzUxNjUzMjY4fQ.ye6wtIf6moa40ZJsnIqbgGkdYalNVJxw75X0mT4RxK0

{
    "orderedTasks": [
        { "id": 14, "orderIndex": 0 }, 
        { "id": 15, "orderIndex": 1 }
        // Si tienes más tareas (y quieres reordenarlas), añádelas aquí con sus IDs y el orderIndex deseado.
        // Ejemplo con tres tareas (si no borraste la 13):
        // { "id": 10, "orderIndex": 1 },
        // { "id": 12, "orderIndex": 0 },
        // { "id": 13, "orderIndex": 2 }
    ]
}